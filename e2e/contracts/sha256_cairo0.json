{
    "abi": [
        {
            "inputs": [
                {
                    "name": "data_len",
                    "type": "felt"
                },
                {
                    "name": "data",
                    "type": "felt*"
                },
                {
                    "name": "data_len_no_padding",
                    "type": "felt"
                }
            ],
            "name": "sha256_cairo0",
            "outputs": [
                {
                    "name": "result_len",
                    "type": "felt"
                },
                {
                    "name": "result",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "entry_points_by_type": {
        "CONSTRUCTOR": [],
        "EXTERNAL": [
            {
                "offset": 1261,
                "selector": "0xa3e03c2551698915765f5c7b6d1c27be0d5326dd24ccc1b481a271a4198c81"
            }
        ],
        "L1_HANDLER": []
    },
    "program": {
        "attributes": [],
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ],
        "compiler_version": "0.12.1",
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482480017ffe8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x208b7fff7fff7ffe",
            "0x400380007ffc7ffd",
            "0x482680017ffc8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x48297ffc80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x482680017ffb8000",
            "0x2",
            "0x480280007ffb8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb6",
            "0x480280017ffb8000",
            "0x48487ffd7fff8000",
            "0x480280007ffb8000",
            "0x40317fff7ffe7ffc",
            "0x48127ffc7fff8000",
            "0x480280017ffb8000",
            "0x480280007ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x6",
            "0x400780017fff7ff9",
            "0x0",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffd8000",
            "0x480a7ff87fff8000",
            "0x48127ffe7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa6",
            "0x48317fec80007ff9",
            "0x48127ffe7fff8000",
            "0x48487ffb80007ffe",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9a",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x400180007fff7ffc",
            "0x482480017fff8001",
            "0x1",
            "0xa0680017fff7fff",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffe",
            "0x402a7ffb7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480780017fff8000",
            "0x1",
            "0x480b7ffc7fff8001",
            "0x480b7ffd7fff8002",
            "0x48507ffe7ffe8003",
            "0xa0680017fff7fff",
            "0x7",
            "0x484480017ffd8002",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x48127ffa7fff7fff",
            "0x90780017fff7fff",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402480017ffd7fff",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x484480017fff8002",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x48507ffb7ffa7fff",
            "0xa0680017fff8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff52",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4f",
            "0x482480017ffe8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x48307fff80007ffc",
            "0x484480017fff8000",
            "0x666666666666674000000000000000000000000000000000000000000000001",
            "0x480a7ffb7fff8000",
            "0x482480017ffe8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480680017fff8000",
            "0xfb",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4d",
            "0x48127fe97fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x7",
            "0x400780017fff8000",
            "0x3ffffffe07ffffffc0fffffff81fffffff03ffffffe07ffffffc0fffffff8",
            "0x400780017fff8001",
            "0x3fffffe007fffffc00ffffff801ffffff003fffffe007fffffc00ffffff80",
            "0x400780017fff8002",
            "0x3fffff0007ffffe000fffffc001fffff8003fffff0007ffffe000fffffc00",
            "0x400780017fff8003",
            "0x3fff800007fff00000fffe00001fffc00003fff800007fff00000fffe0000",
            "0x400780017fff8004",
            "0x3fff000007ffe00000fffc00001fff800003fff000007ffe00000fffc0000",
            "0x400780017fff8005",
            "0x3ffe000007ffc00000fff800001fff000003ffe000007ffc00000fff80000",
            "0x400780017fff8006",
            "0x3fffffffc7fffffff8ffffffff1fffffffe3fffffffc7fffffff8ffffffff",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x10",
            "0x480680017fff8000",
            "0x30",
            "0x48007ff17ffe8000",
            "0x400080007ffc7fff",
            "0x400180017ffc8001",
            "0x400080057ffc7fff",
            "0x400180067ffc8004",
            "0x4000800a7ffc7fff",
            "0x4001800b7ffc8000",
            "0x480680017fff8000",
            "0x2000000",
            "0x48507ffe7fff8000",
            "0x480680017fff8000",
            "0x7f0000000000010ddfffffffffffffffffffffffffffffffffffffffe000001",
            "0x480080027ff98000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x4000800f7ff67fff",
            "0x480680017fff8000",
            "0x4000",
            "0x48507ff87fff8000",
            "0x480680017fff8000",
            "0x7fffe0000000010fffbbfffffffffffffffffffffffffffffffffffffffc001",
            "0x480080077ff38000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080107ff07fff",
            "0x480080127ff08000",
            "0x400080147fef7fff",
            "0x480680017fff8000",
            "0x70000000000000ee00000000000000000000000000000000000000000000001",
            "0x4800800c7fee8000",
            "0x48507fff7ffe8000",
            "0x400080157fec7fff",
            "0x48007ffe7fed8000",
            "0x400080197feb7fff",
            "0x4001801a7feb8003",
            "0x4000801e7feb7fff",
            "0x4001801f7feb8005",
            "0x400080237feb7fff",
            "0x400180247feb8002",
            "0x480680017fff8000",
            "0x8000",
            "0x48507ffe7fff8000",
            "0x480680017fff8000",
            "0x7fffc0000000010fff77fffffffffffffffffffffffffffffffffffffff8001",
            "0x4800801b7fe88000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080287fe57fff",
            "0x480680017fff8000",
            "0x2000",
            "0x48507ff87fff8000",
            "0x480680017fff8000",
            "0x7ffff0000000010fffddfffffffffffffffffffffffffffffffffffffffe001",
            "0x480080207fe28000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080297fdf7fff",
            "0x4800802b7fdf8000",
            "0x4000802d7fde7fff",
            "0x480680017fff8000",
            "0x7fe000000000010fbc000000000000000000000000000000000000000000001",
            "0x480080257fdd8000",
            "0x48507fff7ffe8000",
            "0x4000802e7fdb7fff",
            "0x48007ff07fdc8000",
            "0x480080177fda8000",
            "0x48307fff7ffe8000",
            "0x48007ff97fd98000",
            "0x48307fff7ffe8000",
            "0x480080307fd68000",
            "0x48307fff7ffe8000",
            "0x400080327fd47fff",
            "0x400180337fd48006",
            "0x480080347fd48000",
            "0x400080007fd47fff",
            "0x482480017fd38000",
            "0x37",
            "0x482480017fd38000",
            "0x1",
            "0x482480017fd38000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb0",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x7",
            "0x400780017fff8000",
            "0x3fffffff07ffffffe0fffffffc1fffffff83fffffff07ffffffe0fffffffc",
            "0x400780017fff8001",
            "0x3ffff80007ffff0000ffffe0001ffffc0003ffff80007ffff0000ffffe000",
            "0x400780017fff8002",
            "0x3ff0000007fe000000ffc000001ff8000003ff0000007fe000000ffc00000",
            "0x400780017fff8003",
            "0x3ffffff007fffffe00ffffffc01ffffff803ffffff007fffffe00ffffffc0",
            "0x400780017fff8004",
            "0x3ffffe0007ffffc000fffff8001fffff0003ffffe0007ffffc000fffff800",
            "0x400780017fff8005",
            "0x3f80000007f0000000fe0000001fc0000003f80000007f0000000fe000000",
            "0x400780017fff8006",
            "0x3fffffffc7fffffff8ffffffff1fffffffe3fffffffc7fffffff8ffffffff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280047ffb8000",
            "0x480280057ffb8000",
            "0x480280067ffb8000",
            "0x480280077ffb8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480680017fff8000",
            "0x40",
            "0x400080007ffe7ff4",
            "0x400180017ffe8000",
            "0x400080057ffe7ff4",
            "0x400180067ffe8001",
            "0x4000800a7ffe7ff4",
            "0x4001800b7ffe8002",
            "0x480680017fff8000",
            "0x40000000",
            "0x48507ff37fff8000",
            "0x480680017fff8000",
            "0x60000000000000cbfffffffffffffffffffffffffffffffffffffffc0000001",
            "0x480080027ffb8000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x4000800f7ff87fff",
            "0x480680017fff8000",
            "0x80000",
            "0x48507fed7fff8000",
            "0x480680017fff8000",
            "0x7ffc00000000010ff77fffffffffffffffffffffffffffffffffffffff80001",
            "0x480080077ff58000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080107ff27fff",
            "0x480080127ff28000",
            "0x400080147ff17fff",
            "0x480680017fff8000",
            "0x400",
            "0x48507fe67fff8000",
            "0x480680017fff8000",
            "0x7ffffe000000010ffffbbfffffffffffffffffffffffffffffffffffffffc01",
            "0x4800800c7fee8000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080157feb7fff",
            "0x400080197feb7fe5",
            "0x4001801a7feb8003",
            "0x4000801e7feb7fe5",
            "0x4001801f7feb8004",
            "0x400080237feb7fe5",
            "0x400180247feb8005",
            "0x480680017fff8000",
            "0x4000000",
            "0x48507fe47fff8000",
            "0x480680017fff8000",
            "0x7e0000000000010bbfffffffffffffffffffffffffffffffffffffffc000001",
            "0x4800801b7fe88000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080287fe57fff",
            "0x480680017fff8000",
            "0x200000",
            "0x48507fde7fff8000",
            "0x480680017fff8000",
            "0x7ff000000000010fddfffffffffffffffffffffffffffffffffffffffe00001",
            "0x480080207fe28000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x400080297fdf7fff",
            "0x4800802b7fdf8000",
            "0x4000802d7fde7fff",
            "0x480680017fff8000",
            "0x80",
            "0x48507fd77fff8000",
            "0x480680017fff8000",
            "0x7fffffc00000010fffff77fffffffffffffffffffffffffffffffffffffff81",
            "0x480080257fdb8000",
            "0x48507fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x4000802e7fd87fff",
            "0x400080327fd87fd2",
            "0x400080337fd87fd3",
            "0x480680017fff8000",
            "0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
            "0x48307fd180007fff",
            "0x400080377fd67fff",
            "0x400080387fd67fd2",
            "0x4000803c7fd67fcc",
            "0x4000803d7fd67fcd",
            "0x4800803f7fd68000",
            "0x400080417fd57fff",
            "0x400080427fd57fcd",
            "0x480080307fd58000",
            "0x48307fff7fd18000",
            "0x480080347fd38000",
            "0x480080397fd28000",
            "0x48307fff7ffe8000",
            "0x48307fff7ffc8000",
            "0x480080007fcd8000",
            "0x48307fff7ffe8000",
            "0x480080007fcc8000",
            "0x48307fff7ffe8000",
            "0x480080177fcb8000",
            "0x48307fc17fc08000",
            "0x48307fc17fff8000",
            "0x480080447fc88000",
            "0x48307fff80007ffe",
            "0x484480017fff8000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x48307fff7ffa8000",
            "0x48307fff7ff88000",
            "0x400080467fc37fff",
            "0x400180477fc38006",
            "0x48307ff77fbc8000",
            "0x4000804b7fc27fff",
            "0x4001804c7fc28006",
            "0x480080487fc28000",
            "0x48127fb77fff8000",
            "0x48127fb77fff8000",
            "0x48127fb77fff8000",
            "0x4800804d7fbe8000",
            "0x48127fb77fff8000",
            "0x48127fb77fff8000",
            "0x48127fb77fff8000",
            "0x482480017fb88000",
            "0x1",
            "0x482480017fb88000",
            "0x1",
            "0x482480017fb88000",
            "0x50",
            "0x482480017fb88000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff87",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2a",
            "0x480280007ffb8000",
            "0x48307ff07fff8000",
            "0x400080007ff97fff",
            "0x400180017ff98006",
            "0x480080027ff98000",
            "0x400080007ffc7fff",
            "0x480280017ffb8000",
            "0x48307fee7fff8000",
            "0x400080057ff67fff",
            "0x400180067ff68006",
            "0x480080077ff68000",
            "0x400080017ff97fff",
            "0x480280027ffb8000",
            "0x48307fec7fff8000",
            "0x4000800a7ff37fff",
            "0x4001800b7ff38006",
            "0x4800800c7ff38000",
            "0x400080027ff67fff",
            "0x480280037ffb8000",
            "0x48307fea7fff8000",
            "0x4000800f7ff07fff",
            "0x400180107ff08006",
            "0x480080117ff08000",
            "0x400080037ff37fff",
            "0x480280047ffb8000",
            "0x48307fe87fff8000",
            "0x400080147fed7fff",
            "0x400180157fed8006",
            "0x480080167fed8000",
            "0x400080047ff07fff",
            "0x480280057ffb8000",
            "0x48307fe67fff8000",
            "0x400080197fea7fff",
            "0x4001801a7fea8006",
            "0x4800801b7fea8000",
            "0x400080057fed7fff",
            "0x480280067ffb8000",
            "0x48307fe47fff8000",
            "0x4000801e7fe77fff",
            "0x4001801f7fe78006",
            "0x480080207fe78000",
            "0x400080067fea7fff",
            "0x480280077ffb8000",
            "0x48307fe27fff8000",
            "0x400080237fe47fff",
            "0x400180247fe48006",
            "0x480080257fe48000",
            "0x400080077fe77fff",
            "0x482480017fe38000",
            "0x28",
            "0x48127fe67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x40",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe04",
            "0x400780017fff8000",
            "0x10a28be60214517cc0428a2f98085145f3010a28be60214517cc0428a2f98",
            "0x400780017fff8001",
            "0x1c4dd1244389ba2488713744910e26e89221c4dd1244389ba248871374491",
            "0x400780017fff8002",
            "0x2d703ef3c5ae07de78b5c0fbcf16b81f79e2d703ef3c5ae07de78b5c0fbcf",
            "0x400780017fff8003",
            "0x3a6d76e9474daedd28e9b5dba51d36bb74a3a6d76e9474daedd28e9b5dba5",
            "0x400780017fff8004",
            "0xe55b096c1cab612d83956c25b072ad84b60e55b096c1cab612d83956c25b",
            "0x400780017fff8005",
            "0x167c447c42cf888f8859f111f10b3e223e2167c447c42cf888f8859f111f1",
            "0x400780017fff8006",
            "0x248fe0a90491fc1520923f82a41247f0548248fe0a90491fc1520923f82a4",
            "0x400780017fff8007",
            "0x2ac717b54558e2f6a8ab1c5ed515638bdaa2ac717b54558e2f6a8ab1c5ed5",
            "0x400780017fff8008",
            "0x3601eaa606c03d54c0d807aa981b00f55303601eaa606c03d54c0d807aa98",
            "0x400780017fff8009",
            "0x4a0d6c040941ad80812835b0102506b60204a0d6c040941ad80812835b01",
            "0x400780017fff800a",
            "0x90c616f81218c2df0243185be048630b7c090c616f81218c2df0243185be",
            "0x400780017fff800b",
            "0x15431f70c2a863ee18550c7dc30aa18fb8615431f70c2a863ee18550c7dc3",
            "0x400780017fff800c",
            "0x1caf975d0395f2eba072be5d740e57cbae81caf975d0395f2eba072be5d74",
            "0x400780017fff800d",
            "0x2037ac7f8406f58ff080deb1fe101bd63fc2037ac7f8406f58ff080deb1fe",
            "0x400780017fff800e",
            "0x26f701a9c4dee035389bdc06a7137b80d4e26f701a9c4dee035389bdc06a7",
            "0x400780017fff800f",
            "0x3066fc5d060cdf8ba0c19bf17418337e2e83066fc5d060cdf8ba0c19bf174",
            "0x400780017fff8010",
            "0x3926da704724db4e08e49b69c11c936d3823926da704724db4e08e49b69c1",
            "0x400780017fff8011",
            "0x3bef91e1877df23c30efbe47861df7c8f0c3bef91e1877df23c30efbe4786",
            "0x400780017fff8012",
            "0x3f06771807e0cee300fc19dc601f833b8c03f06771807e0cee300fc19dc6",
            "0x400780017fff8013",
            "0x90328730120650e60240ca1cc048194398090328730120650e60240ca1cc",
            "0x400780017fff8014",
            "0xb7a4b1bc16f4963782de92c6f05bd258de0b7a4b1bc16f4963782de92c6f",
            "0x400780017fff8015",
            "0x129d212a8253a425504a7484aa094e90954129d212a8253a425504a7484aa",
            "0x400780017fff8016",
            "0x172c2a7702e5854ee05cb0a9dc0b96153b8172c2a7702e5854ee05cb0a9dc",
            "0x400780017fff8017",
            "0x1dbe623683b7cc46d076f988da0edf311b41dbe623683b7cc46d076f988da",
            "0x400780017fff8018",
            "0x260f945484c1f28a90983e51521307ca2a4260f945484c1f28a90983e5152",
            "0x400780017fff8019",
            "0x2a0c719b45418e3368a831c66d150638cda2a0c719b45418e3368a831c66d",
            "0x400780017fff801a",
            "0x2c00c9f20580193e40b00327c8160064f902c00c9f20580193e40b00327c8",
            "0x400780017fff801b",
            "0x2fd65ff1c5facbfe38bf597fc717eb2ff8e2fd65ff1c5facbfe38bf597fc7",
            "0x400780017fff801c",
            "0x31b802fcc637005f98c6e00bf318dc017e631b802fcc637005f98c6e00bf3",
            "0x400780017fff801d",
            "0x3569e451c6ad3c8a38d5a791471ab4f228e3569e451c6ad3c8a38d5a79147",
            "0x400780017fff801e",
            "0x1b298d44036531a8806ca635100d94c6a201b298d44036531a8806ca6351",
            "0x400780017fff801f",
            "0x50a4a59c0a1494b38142929670285252ce050a4a59c0a1494b3814292967",
            "0x400780017fff8020",
            "0x9edc2a1413db8542827b70a8504f6e150a09edc2a1413db8542827b70a85",
            "0x400780017fff8021",
            "0xb86c84e0170d909c02e1b213805c3642700b86c84e0170d909c02e1b2138",
            "0x400780017fff8022",
            "0x134b1b7f0269636fe04d2c6dfc09a58dbf8134b1b7f0269636fe04d2c6dfc",
            "0x400780017fff8023",
            "0x14ce0344c299c0689853380d130a6701a2614ce0344c299c0689853380d13",
            "0x400780017fff8024",
            "0x19429cd50328539aa0650a73540ca14e6a819429cd50328539aa0650a7354",
            "0x400780017fff8025",
            "0x1d9a82aec3b35055d8766a0abb0ecd415761d9a82aec3b35055d8766a0abb",
            "0x400780017fff8026",
            "0x2070b24b840e16497081c2c92e10385925c2070b24b840e16497081c2c92e",
            "0x400780017fff8027",
            "0x249c8b21449391642892722c85124e4590a249c8b21449391642892722c85",
            "0x400780017fff8028",
            "0x28affa284515ff4508a2bfe8a11457fd14228affa284515ff4508a2bfe8a1",
            "0x400780017fff8029",
            "0x2a069992c540d33258a81a664b15034cc962a069992c540d33258a81a664b",
            "0x400780017fff802a",
            "0x3092e2dc06125c5b80c24b8b701849716e03092e2dc06125c5b80c24b8b70",
            "0x400780017fff802b",
            "0x31db1468c63b628d18c76c51a318ed8a34631db1468c63b628d18c76c51a3",
            "0x400780017fff802c",
            "0x3464ba06468c9740c8d192e8191a325d0323464ba06468c9740c8d192e819",
            "0x400780017fff802d",
            "0x35a6418906b4c83120d69906241ad320c4835a6418906b4c83120d6990624",
            "0x400780017fff802e",
            "0x3d038d6147a071ac28f40e35851e81c6b0a3d038d6147a071ac28f40e3585",
            "0x400780017fff802f",
            "0x41aa81c0083550380106aa070020d540e0041aa81c0083550380106aa070",
            "0x400780017fff8030",
            "0x669304580cd2608b019a4c11603349822c0669304580cd2608b019a4c116",
            "0x400780017fff8031",
            "0x78ddb0200f1bb60401e376c0803c6ed810078ddb0200f1bb60401e376c08",
            "0x400780017fff8032",
            "0x9d21dd3013a43ba602748774c04e90ee9809d21dd3013a43ba602748774c",
            "0x400780017fff8033",
            "0xd2c2f2d41a585e5a834b0bcb506961796a0d2c2f2d41a585e5a834b0bcb5",
            "0x400780017fff8034",
            "0xe47032cc1c8e06598391c0cb30723819660e47032cc1c8e06598391c0cb3",
            "0x400780017fff8035",
            "0x13b62a928276c552504ed8aa4a09db1549413b62a928276c552504ed8aa4a",
            "0x400780017fff8036",
            "0x16e73293c2dce652785b9cca4f0b739949e16e73293c2dce652785b9cca4f",
            "0x400780017fff8037",
            "0x1a0b9bfcc341737f98682e6ff30d05cdfe61a0b9bfcc341737f98682e6ff3",
            "0x400780017fff8038",
            "0x1d23e0bb83a47c1770748f82ee0e91f05dc1d23e0bb83a47c1770748f82ee",
            "0x400780017fff8039",
            "0x1e2958dbc3c52b1b7878a5636f0f14ac6de1e2958dbc3c52b1b7878a5636f",
            "0x400780017fff803a",
            "0x21321e05042643c0a084c8781410990f02821321e05042643c0a084c87814",
            "0x400780017fff803b",
            "0x2331c08204663810408cc702081198e04102331c08204663810408cc70208",
            "0x400780017fff803c",
            "0x242fbffe8485f7ffd090befffa1217dfff4242fbffe8485f7ffd090befffa",
            "0x400780017fff803d",
            "0x29141b3ac522836758a4506ceb148a0d9d629141b3ac522836758a4506ceb",
            "0x400780017fff803e",
            "0x2fbe68fdc5f7cd1fb8bef9a3f717df347ee2fbe68fdc5f7cd1fb8bef9a3f7",
            "0x400780017fff803f",
            "0x319c5e3c86338bc790c67178f218ce2f1e4319c5e3c86338bc790c67178f2",
            "0x48127ffe7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x0",
            "0x480680017fff8000",
            "0x6a09e667",
            "0x400280107ffb7fff",
            "0x480680017fff8000",
            "0xbb67ae85",
            "0x400280117ffb7fff",
            "0x480680017fff8000",
            "0x3c6ef372",
            "0x400280127ffb7fff",
            "0x480680017fff8000",
            "0xa54ff53a",
            "0x400280137ffb7fff",
            "0x480680017fff8000",
            "0x510e527f",
            "0x400280147ffb7fff",
            "0x480680017fff8000",
            "0x9b05688c",
            "0x400280157ffb7fff",
            "0x480680017fff8000",
            "0x1f83d9ab",
            "0x400280167ffb7fff",
            "0x480680017fff8000",
            "0x5be0cd19",
            "0x400280177ffb7fff",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0xc",
            "0x48127ffe7fff8000",
            "0x482480017ffe8000",
            "0x8",
            "0x48127ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x5",
            "0x480a7ff97fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc7",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc1",
            "0x48127ffe7fff8000",
            "0x480a7ffd7fff8000",
            "0x480680017fff8000",
            "0x40",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd93",
            "0x48127ffd7fff8000",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb5",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x37",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdaf",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x1e",
            "0x48307fa780007f86",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xe",
            "0x48307fd780007ffa",
            "0x1104800180018000",
            "0x72",
            "0x480680017fff8000",
            "0x0",
            "0x400080007ffe7fff",
            "0x484680017ffd8000",
            "0x8",
            "0x400080017ffd7fff",
            "0x48127ffc7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffa8000",
            "0x10",
            "0x482680017ffa8000",
            "0x18",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc2",
            "0x48127ffc7fff8000",
            "0x482480017ff28000",
            "0xa",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x40",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd61",
            "0x40137fff7fff8000",
            "0x48127ffd7fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd82",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x27",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a80007fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x45",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffa8000",
            "0x10",
            "0x482680017ffa8000",
            "0x18",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9b",
            "0x40137ffc7fff8001",
            "0x402580017ff58002",
            "0x8",
            "0x482480017fff8000",
            "0x18",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x8",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdb",
            "0x480a80017fff8000",
            "0x4826800180028000",
            "0x8",
            "0x480a7ffb7fff8000",
            "0x4829800080007ffc",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8e",
            "0x208b7fff7fff7ffe",
            "0x48127ffd7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x40",
            "0x480680017fff8000",
            "0x10",
            "0x480680017fff8000",
            "0x0",
            "0x1104800180018000",
            "0x1f",
            "0x48127ffe7fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffa8000",
            "0x10",
            "0x482680017ffa8000",
            "0x18",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff75",
            "0x40137ffc7fff8003",
            "0x402580017ff58004",
            "0x8",
            "0x482480017fff8000",
            "0x18",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x8",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb5",
            "0x480a80037fff8000",
            "0x4826800180048000",
            "0x8",
            "0x482680017ffb8000",
            "0x10",
            "0x482680017ffc8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff66",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x20780017fff8000",
            "0x4",
            "0x10780017fff7fff",
            "0x11",
            "0x480280007ffa8000",
            "0x400280007ff97fff",
            "0x480a7ff87fff8000",
            "0x482680017ff98000",
            "0x1",
            "0x482680017ffa8000",
            "0x1",
            "0x482680017ffb8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffd",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x5",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0xf",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0xb",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1f",
            "0x480a7ff87fff8000",
            "0x482a7ffc7ff98000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x10",
            "0x480680017fff8000",
            "0x80000000",
            "0x400280007ff97fff",
            "0x482680017ff98000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0f",
            "0x480a7ff87fff8000",
            "0x482a7ffc7ff98000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x3",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc89",
            "0x480680017fff8000",
            "0x3",
            "0x48127ffe7fff8000",
            "0x480680017fff8000",
            "0x100",
            "0x48287ffb80007ffd",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd09",
            "0x40137ffe7fff8001",
            "0x480280007ffa8000",
            "0x484480017ffe8000",
            "0x80",
            "0x48307fff7ffe8000",
            "0x400280007ff97fff",
            "0x482680017ff98000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf0",
            "0x480a80017fff8000",
            "0x482a7ffc7ff98000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x5",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x6",
            "0x400780017fff8000",
            "0xffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc44",
            "0x40137fff7fff8001",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc41",
            "0x40137fff7fff8002",
            "0x480a80017fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x10",
            "0x480080007ffd8000",
            "0x400080007ffd7fff",
            "0x48317fff80008000",
            "0x400080017ffc7fff",
            "0x480080207ffb8000",
            "0x400080027ffb7fff",
            "0x48317fff80008000",
            "0x400080037ffa7fff",
            "0x480080407ff98000",
            "0x400080047ff97fff",
            "0x48317fff80008000",
            "0x400080057ff87fff",
            "0x480080607ff78000",
            "0x400080067ff77fff",
            "0x48317fff80008000",
            "0x400080077ff67fff",
            "0x480080807ff58000",
            "0x400080087ff57fff",
            "0x48317fff80008000",
            "0x400080097ff47fff",
            "0x480080a07ff38000",
            "0x4000800a7ff37fff",
            "0x48317fff80008000",
            "0x4000800b7ff27fff",
            "0x480080c07ff18000",
            "0x4000800c7ff17fff",
            "0x48317fff80008000",
            "0x4000800d7ff07fff",
            "0x480680017fff8000",
            "0x800000000",
            "0x48507ff37fff8000",
            "0x48307fff7ff08000",
            "0x480680017fff8000",
            "0x400000000000000000",
            "0x48507ff27fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x200000000000000000000000000",
            "0x48507ff17fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000",
            "0x48507ff07fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x80000000000000000000000000000000000000000000",
            "0x48507fef7fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x40000000000000000000000000000000000000000000000000000",
            "0x48507fee7fff8000",
            "0x48307fff7ffd8000",
            "0x400080007fdc7fff",
            "0x482480017fdc8000",
            "0x1",
            "0x482480017fdc8000",
            "0x1",
            "0x482480017fdc8000",
            "0xe",
            "0x482480017fdc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
            "0x480a80027fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffc7fff8000",
            "0x480680017fff8000",
            "0x8",
            "0x480080007ffd8000",
            "0x400080007ffd7fff",
            "0x48317fff80008000",
            "0x400080017ffc7fff",
            "0x480080207ffb8000",
            "0x400080027ffb7fff",
            "0x48317fff80008000",
            "0x400080037ffa7fff",
            "0x480080407ff98000",
            "0x400080047ff97fff",
            "0x48317fff80008000",
            "0x400080057ff87fff",
            "0x480080607ff78000",
            "0x400080067ff77fff",
            "0x48317fff80008000",
            "0x400080077ff67fff",
            "0x480080807ff58000",
            "0x400080087ff57fff",
            "0x48317fff80008000",
            "0x400080097ff47fff",
            "0x480080a07ff38000",
            "0x4000800a7ff37fff",
            "0x48317fff80008000",
            "0x4000800b7ff27fff",
            "0x480080c07ff18000",
            "0x4000800c7ff17fff",
            "0x48317fff80008000",
            "0x4000800d7ff07fff",
            "0x480680017fff8000",
            "0x800000000",
            "0x48507ff37fff8000",
            "0x48307fff7ff08000",
            "0x480680017fff8000",
            "0x400000000000000000",
            "0x48507ff27fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x200000000000000000000000000",
            "0x48507ff17fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000",
            "0x48507ff07fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x80000000000000000000000000000000000000000000",
            "0x48507fef7fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x40000000000000000000000000000000000000000000000000000",
            "0x48507fee7fff8000",
            "0x48307fff7ffd8000",
            "0x400080007fdc7fff",
            "0x482480017fdc8000",
            "0x1",
            "0x482480017fdc8000",
            "0x1",
            "0x482480017fdc8000",
            "0xe",
            "0x482480017fdc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
            "0x40137ffd7fff8003",
            "0x40137ffe7fff8004",
            "0x480a7ffa7fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc86",
            "0x480a80027fff8000",
            "0x480a80017fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffceb",
            "0x40137ffe7fff8005",
            "0x480a80037fff8000",
            "0x480a80047fff8000",
            "0x480680017fff8000",
            "0x8",
            "0x480080007ffd8000",
            "0x400080007ffd7fff",
            "0x48317fff80008000",
            "0x400080017ffc7fff",
            "0x480080207ffb8000",
            "0x400080027ffb7fff",
            "0x48317fff80008000",
            "0x400080037ffa7fff",
            "0x480080407ff98000",
            "0x400080047ff97fff",
            "0x48317fff80008000",
            "0x400080057ff87fff",
            "0x480080607ff78000",
            "0x400080067ff77fff",
            "0x48317fff80008000",
            "0x400080077ff67fff",
            "0x480080807ff58000",
            "0x400080087ff57fff",
            "0x48317fff80008000",
            "0x400080097ff47fff",
            "0x480080a07ff38000",
            "0x4000800a7ff37fff",
            "0x48317fff80008000",
            "0x4000800b7ff27fff",
            "0x480080c07ff18000",
            "0x4000800c7ff17fff",
            "0x48317fff80008000",
            "0x4000800d7ff07fff",
            "0x480680017fff8000",
            "0x800000000",
            "0x48507ff37fff8000",
            "0x48307fff7ff08000",
            "0x480680017fff8000",
            "0x400000000000000000",
            "0x48507ff27fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x200000000000000000000000000",
            "0x48507ff17fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000000",
            "0x48507ff07fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x80000000000000000000000000000000000000000000",
            "0x48507fef7fff8000",
            "0x48307fff7ffd8000",
            "0x480680017fff8000",
            "0x40000000000000000000000000000000000000000000000000000",
            "0x48507fee7fff8000",
            "0x48307fff7ffd8000",
            "0x400080007fdc7fff",
            "0x482480017fdc8000",
            "0x1",
            "0x482480017fdc8000",
            "0x1",
            "0x482480017fdc8000",
            "0xe",
            "0x482480017fdc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
            "0x48127ffe7fff8000",
            "0x480a80057fff8000",
            "0x482680017ffb8000",
            "0xe0",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff14",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb6d",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd66",
            "0x48297ffc80007ffd",
            "0x484480017fff8000",
            "0x7c0000000000010780000000000000000000000000000000000000000000001",
            "0x20680017fff7fff",
            "0x5",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x482480017ffe8000",
            "0x6",
            "0x480680017fff8000",
            "0x7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbac",
            "0x40137ffe7fff8000",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a80007fff8000",
            "0x48127fe47fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef6",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb3d",
            "0x40137fff7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a80007fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc9",
            "0x40137fff7fff8001",
            "0x48127ffd7fff8000",
            "0x480a7ff87fff8000",
            "0x480a80007fff8000",
            "0x480a80007fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
            "0x480a7ff97fff8000",
            "0x48127ffd7fff8000",
            "0x480680017fff8000",
            "0x8",
            "0x480a80017fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x4003800080007ffb",
            "0x400380007ffd7ffb",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x40297ffb7fff8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb1d",
            "0x480a80017fff8000",
            "0x4829800080008002",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x2",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x48307fff7ffe8000",
            "0x482480017fff8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x480280017ffb8000",
            "0x482480017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff88000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x40137ffc7fff8000",
            "0x40137ffb7fff8001",
            "0x48127ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
            "0x480280007ffb8000",
            "0x480a80007fff8000",
            "0x48127ffb7fff8000",
            "0x480a80017fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe"
        ],
        "debug_info": null,
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "6": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_enter_scope({'n': ids.len})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        }
                    }
                }
            ],
            "14": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 5
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        }
                    }
                }
            ],
            "17": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 1,
                            "offset": 6
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "24": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_nn"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 4,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_nn.a": 2
                        }
                    }
                }
            ],
            "42": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 3,
                            "starkware.cairo.common.math.assert_le_felt.b": 4,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 5
                        }
                    }
                }
            ],
            "52": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 8
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "66": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "memory[ap] = 1 if excluded != 1 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 9
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "78": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "code": "assert excluded == 2",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 7,
                            "offset": 10
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "87": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 8,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 6,
                            "starkware.cairo.common.math.assert_lt_felt.b": 7
                        }
                    }
                }
            ],
            "98": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.unsigned_div_rem"
                    ],
                    "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 9,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.unsigned_div_rem.div": 9,
                            "starkware.cairo.common.math.unsigned_div_rem.q": 11,
                            "starkware.cairo.common.math.unsigned_div_rem.r": 10,
                            "starkware.cairo.common.math.unsigned_div_rem.value": 8
                        }
                    }
                }
            ],
            "115": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "assert ids.value == 0, 'split_int(): value is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.value": 12
                        }
                    }
                }
            ],
            "119": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.split_int"
                    ],
                    "code": "memory[ids.output] = res = (int(ids.value) % PRIME) % ids.base\nassert res < ids.bound, f'split_int(): Limb {res} is out of range.'",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 10,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math.split_int.base": 13,
                            "starkware.cairo.common.math.split_int.bound": 14,
                            "starkware.cairo.common.math.split_int.output": 15,
                            "starkware.cairo.common.math.split_int.value": 12
                        }
                    }
                }
            ],
            "138": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 12,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 16,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 17
                        }
                    }
                }
            ],
            "161": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "code": "vm_enter_scope({'n': ids.n})",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 0
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memset.memset.n": 18
                        }
                    }
                }
            ],
            "165": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "code": "n -= 1\nids.continue_loop = 1 if n > 0 else 0",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 2
                        },
                        "reference_ids": {
                            "starkware.cairo.common.memset.memset.continue_loop": 19
                        }
                    }
                }
            ],
            "168": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memset",
                        "starkware.cairo.common.memset.memset"
                    ],
                    "code": "vm_exit_scope()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 13,
                            "offset": 3
                        },
                        "reference_ids": {}
                    }
                }
            ],
            "180": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.pow",
                        "starkware.cairo.common.pow.pow"
                    ],
                    "code": "ids.locs.bit = (ids.prev_locs.exp % PRIME) & 1",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 14,
                            "offset": 4
                        },
                        "reference_ids": {
                            "starkware.cairo.common.pow.pow.locs": 21,
                            "starkware.cairo.common.pow.pow.prev_locs": 20
                        }
                    }
                }
            ],
            "697": [
                {
                    "accessible_scopes": [
                        "src.sha256",
                        "src.sha256._sha256_chunk"
                    ],
                    "code": "from starkware.cairo.common.cairo_sha256.sha256_utils import (\n    compute_message_schedule, sha2_compress_function)\n\n_sha256_input_chunk_size_felts = int(ids.SHA256_INPUT_CHUNK_SIZE_FELTS)\nassert 0 <= _sha256_input_chunk_size_felts < 100\n_sha256_state_size_felts = int(ids.SHA256_STATE_SIZE_FELTS)\nassert 0 <= _sha256_state_size_felts < 100\nw = compute_message_schedule(memory.get_range(\n    ids.sha256_start, _sha256_input_chunk_size_felts))\nnew_state = sha2_compress_function(memory.get_range(ids.state, _sha256_state_size_felts), w)\nsegments.write_arg(ids.output, new_state)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 20,
                            "offset": 0
                        },
                        "reference_ids": {
                            "src.sha256._sha256_chunk.output": 24,
                            "src.sha256._sha256_chunk.sha256_start": 22,
                            "src.sha256._sha256_chunk.state": 23
                        }
                    }
                }
            ],
            "862": [
                {
                    "accessible_scopes": [
                        "src.sha256",
                        "src.sha256._sha256_input"
                    ],
                    "code": "ids.full_word = int(ids.n_bytes >= 4)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 29,
                            "offset": 2
                        },
                        "reference_ids": {
                            "src.sha256._sha256_input.full_word": 26,
                            "src.sha256._sha256_input.n_bytes": 25
                        }
                    }
                }
            ],
            "1202": [
                {
                    "accessible_scopes": [
                        "src.sha256",
                        "src.sha256.finalize_sha256"
                    ],
                    "code": "# Add dummy pairs of input and output.\nfrom starkware.cairo.common.cairo_sha256.sha256_utils import (\n    IV, compute_message_schedule, sha2_compress_function)\n\n_block_size = int(ids.BLOCK_SIZE)\nassert 0 <= _block_size < 20\n_sha256_input_chunk_size_felts = int(ids.SHA256_INPUT_CHUNK_SIZE_FELTS)\nassert 0 <= _sha256_input_chunk_size_felts < 100\n\nmessage = [0] * _sha256_input_chunk_size_felts\nw = compute_message_schedule(message)\noutput = sha2_compress_function(IV, w)\npadding = (message + IV + output) * (_block_size - 1)\nsegments.write_arg(ids.sha256_ptr_end, padding)",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 40,
                            "offset": 74
                        },
                        "reference_ids": {
                            "src.sha256.finalize_sha256.sha256_ptr_end": 27
                        }
                    }
                }
            ],
            "1242": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.sha256_cairo0_encode_return"
                    ],
                    "code": "memory[ap] = segments.add()",
                    "flow_tracking_data": {
                        "ap_tracking": {
                            "group": 45,
                            "offset": 0
                        },
                        "reference_ids": {}
                    }
                }
            ]
        },
        "identifiers": {
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.finalize_sha256": {
                "destination": "src.sha256.finalize_sha256",
                "type": "alias"
            },
            "__main__.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__main__.sha256": {
                "destination": "src.sha256.sha256",
                "type": "alias"
            },
            "__main__.sha256_cairo0": {
                "decorators": [
                    "view"
                ],
                "pc": 1218,
                "type": "function"
            },
            "__main__.sha256_cairo0.Args": {
                "full_name": "__main__.sha256_cairo0.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "data_len_no_padding": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.sha256_cairo0.ImplicitArgs": {
                "full_name": "__main__.sha256_cairo0.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    },
                    "pedersen_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.sha256_cairo0.Return": {
                "cairo_type": "(result_len: felt, result: felt*)",
                "type": "type_definition"
            },
            "__main__.sha256_cairo0.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__main__.split_int": {
                "destination": "starkware.cairo.common.math.split_int",
                "type": "alias"
            },
            "__wrappers__.sha256_cairo0": {
                "decorators": [
                    "view"
                ],
                "pc": 1261,
                "type": "function"
            },
            "__wrappers__.sha256_cairo0.Args": {
                "full_name": "__wrappers__.sha256_cairo0.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.sha256_cairo0.ImplicitArgs": {
                "full_name": "__wrappers__.sha256_cairo0.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.sha256_cairo0.Return": {
                "cairo_type": "(syscall_ptr: felt, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.sha256_cairo0.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "__wrappers__.sha256_cairo0.__wrapped_func": {
                "destination": "__main__.sha256_cairo0",
                "type": "alias"
            },
            "__wrappers__.sha256_cairo0_encode_return": {
                "decorators": [],
                "pc": 1242,
                "type": "function"
            },
            "__wrappers__.sha256_cairo0_encode_return.Args": {
                "full_name": "__wrappers__.sha256_cairo0_encode_return.Args",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "ret_value": {
                        "cairo_type": "(result_len: felt, result: felt*)",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__wrappers__.sha256_cairo0_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.sha256_cairo0_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.sha256_cairo0_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.sha256_cairo0_encode_return.SIZEOF_LOCALS": {
                "type": "const",
                "value": 3
            },
            "__wrappers__.sha256_cairo0_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "src.packed_sha256.ALL_ONES": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719234
            },
            "src.packed_sha256.BLOCK_SIZE": {
                "type": "const",
                "value": 7
            },
            "src.packed_sha256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "src.packed_sha256.SHIFTS": {
                "type": "const",
                "value": 1645504557369096527808422005955997578346737493946174629784584193
            },
            "src.packed_sha256.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "src.packed_sha256.compute_message_schedule": {
                "decorators": [],
                "pc": 212,
                "type": "function"
            },
            "src.packed_sha256.compute_message_schedule.Args": {
                "full_name": "src.packed_sha256.compute_message_schedule.Args",
                "members": {
                    "message": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.packed_sha256.compute_message_schedule.ImplicitArgs": {
                "full_name": "src.packed_sha256.compute_message_schedule.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.packed_sha256.compute_message_schedule.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.packed_sha256.compute_message_schedule.SIZEOF_LOCALS": {
                "type": "const",
                "value": 7
            },
            "src.packed_sha256.compute_message_schedule.loop": {
                "pc": 233,
                "type": "label"
            },
            "src.packed_sha256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "src.packed_sha256.get_round_constants": {
                "decorators": [],
                "pc": 525,
                "type": "function"
            },
            "src.packed_sha256.get_round_constants.Args": {
                "full_name": "src.packed_sha256.get_round_constants.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "src.packed_sha256.get_round_constants.ImplicitArgs": {
                "full_name": "src.packed_sha256.get_round_constants.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "src.packed_sha256.get_round_constants.Return": {
                "cairo_type": "(round_constants: felt*)",
                "type": "type_definition"
            },
            "src.packed_sha256.get_round_constants.SIZEOF_LOCALS": {
                "type": "const",
                "value": 64
            },
            "src.packed_sha256.sha2_compress": {
                "decorators": [],
                "pc": 318,
                "type": "function"
            },
            "src.packed_sha256.sha2_compress.Args": {
                "full_name": "src.packed_sha256.sha2_compress.Args",
                "members": {
                    "message": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "round_constants": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "state": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.packed_sha256.sha2_compress.ImplicitArgs": {
                "full_name": "src.packed_sha256.sha2_compress.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "src.packed_sha256.sha2_compress.Return": {
                "cairo_type": "(new_state: felt*)",
                "type": "type_definition"
            },
            "src.packed_sha256.sha2_compress.SIZEOF_LOCALS": {
                "type": "const",
                "value": 7
            },
            "src.packed_sha256.sha2_compress.loop": {
                "pc": 347,
                "type": "label"
            },
            "src.sha256.BLOCK_SIZE": {
                "destination": "src.packed_sha256.BLOCK_SIZE",
                "type": "alias"
            },
            "src.sha256.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "src.sha256.SHA256_INPUT_CHUNK_SIZE_BYTES": {
                "type": "const",
                "value": 64
            },
            "src.sha256.SHA256_INPUT_CHUNK_SIZE_FELTS": {
                "type": "const",
                "value": 16
            },
            "src.sha256.SHA256_INSTANCE_SIZE": {
                "type": "const",
                "value": 32
            },
            "src.sha256.SHA256_STATE_SIZE_FELTS": {
                "type": "const",
                "value": 8
            },
            "src.sha256._finalize_sha256_inner": {
                "decorators": [],
                "pc": 948,
                "type": "function"
            },
            "src.sha256._finalize_sha256_inner.Args": {
                "full_name": "src.sha256._finalize_sha256_inner.Args",
                "members": {
                    "n": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "round_constants": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "sha256_ptr": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.sha256._finalize_sha256_inner.ImplicitArgs": {
                "full_name": "src.sha256._finalize_sha256_inner.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256._finalize_sha256_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.sha256._finalize_sha256_inner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 6
            },
            "src.sha256._finalize_sha256_inner.input_state_loop": {
                "pc": 1036,
                "type": "label"
            },
            "src.sha256._finalize_sha256_inner.message_loop": {
                "pc": 968,
                "type": "label"
            },
            "src.sha256._finalize_sha256_inner.output_loop": {
                "pc": 1115,
                "type": "label"
            },
            "src.sha256._sha256_chunk": {
                "decorators": [],
                "pc": 697,
                "type": "function"
            },
            "src.sha256._sha256_chunk.Args": {
                "full_name": "src.sha256._sha256_chunk.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "src.sha256._sha256_chunk.ImplicitArgs": {
                "full_name": "src.sha256._sha256_chunk.ImplicitArgs",
                "members": {
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "sha256_start": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "state": {
                        "cairo_type": "felt*",
                        "offset": 2
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "src.sha256._sha256_chunk.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.sha256._sha256_chunk.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.sha256._sha256_chunk.output": {
                "cairo_type": "felt*",
                "full_name": "src.sha256._sha256_chunk.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 20,
                            "offset": 0
                        },
                        "pc": 697,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "src.sha256._sha256_chunk.sha256_start": {
                "cairo_type": "felt*",
                "full_name": "src.sha256._sha256_chunk.sha256_start",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 20,
                            "offset": 0
                        },
                        "pc": 697,
                        "value": "[cast(fp + (-5), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "src.sha256._sha256_chunk.state": {
                "cairo_type": "felt*",
                "full_name": "src.sha256._sha256_chunk.state",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 20,
                            "offset": 0
                        },
                        "pc": 697,
                        "value": "[cast(fp + (-4), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "src.sha256._sha256_input": {
                "decorators": [],
                "pc": 860,
                "type": "function"
            },
            "src.sha256._sha256_input.Args": {
                "full_name": "src.sha256._sha256_input.Args",
                "members": {
                    "input": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "n_bytes": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "n_words": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "pad_chunk": {
                        "cairo_type": "felt",
                        "offset": 3
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "src.sha256._sha256_input.ImplicitArgs": {
                "full_name": "src.sha256._sha256_input.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "sha256_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256._sha256_input.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.sha256._sha256_input.SIZEOF_LOCALS": {
                "type": "const",
                "value": 2
            },
            "src.sha256._sha256_input.full_word": {
                "cairo_type": "felt",
                "full_name": "src.sha256._sha256_input.full_word",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 29,
                            "offset": 2
                        },
                        "pc": 862,
                        "value": "[cast(fp, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "src.sha256._sha256_input.n_bytes": {
                "cairo_type": "felt",
                "full_name": "src.sha256._sha256_input.n_bytes",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 29,
                            "offset": 0
                        },
                        "pc": 860,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "src.sha256.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "src.sha256.assert_nn_le": {
                "destination": "starkware.cairo.common.math.assert_nn_le",
                "type": "alias"
            },
            "src.sha256.compute_message_schedule": {
                "destination": "src.packed_sha256.compute_message_schedule",
                "type": "alias"
            },
            "src.sha256.finalize_sha256": {
                "decorators": [],
                "pc": 1188,
                "type": "function"
            },
            "src.sha256.finalize_sha256.Args": {
                "full_name": "src.sha256.finalize_sha256.Args",
                "members": {
                    "sha256_ptr_end": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "sha256_ptr_start": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256.finalize_sha256.ImplicitArgs": {
                "full_name": "src.sha256.finalize_sha256.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*",
                        "offset": 1
                    },
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256.finalize_sha256.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.sha256.finalize_sha256.SIZEOF_LOCALS": {
                "type": "const",
                "value": 1
            },
            "src.sha256.finalize_sha256.sha256_ptr_end": {
                "cairo_type": "felt*",
                "full_name": "src.sha256.finalize_sha256.sha256_ptr_end",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 40,
                            "offset": 0
                        },
                        "pc": 1188,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "src.sha256.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "src.sha256.get_round_constants": {
                "destination": "src.packed_sha256.get_round_constants",
                "type": "alias"
            },
            "src.sha256.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "src.sha256.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "src.sha256.memset": {
                "destination": "starkware.cairo.common.memset.memset",
                "type": "alias"
            },
            "src.sha256.pow": {
                "destination": "starkware.cairo.common.pow.pow",
                "type": "alias"
            },
            "src.sha256.sha256": {
                "decorators": [],
                "pc": 659,
                "type": "function"
            },
            "src.sha256.sha256.Args": {
                "full_name": "src.sha256.sha256.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "n_bytes": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256.sha256.ImplicitArgs": {
                "full_name": "src.sha256.sha256.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "sha256_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256.sha256.Return": {
                "cairo_type": "(output: felt*)",
                "type": "type_definition"
            },
            "src.sha256.sha256.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "src.sha256.sha256_inner": {
                "decorators": [],
                "pc": 702,
                "type": "function"
            },
            "src.sha256.sha256_inner.Args": {
                "full_name": "src.sha256.sha256_inner.Args",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "n_bytes": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "total_bytes": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "src.sha256.sha256_inner.ImplicitArgs": {
                "full_name": "src.sha256.sha256_inner.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "sha256_ptr": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "src.sha256.sha256_inner.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "src.sha256.sha256_inner.SIZEOF_LOCALS": {
                "type": "const",
                "value": 5
            },
            "src.sha256.sha2_compress": {
                "destination": "src.packed_sha256.sha2_compress",
                "type": "alias"
            },
            "src.sha256.unsigned_div_rem": {
                "destination": "starkware.cairo.common.math.unsigned_div_rem",
                "type": "alias"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.FALSE": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.bool.TRUE": {
                "type": "const",
                "value": 1
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "x_and_y": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x_or_y": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "x_xor_y": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "m": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "p": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 0
                    },
                    "q": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 2
                    },
                    "r": {
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "result": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                        "offset": 8
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
                "members": {
                    "input": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 0
                    },
                    "output": {
                        "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                        "offset": 3
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
                "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "message": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "pub_key": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "new_value": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "prev_value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "y": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "s3": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "s4": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "s5": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "s6": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "s7": {
                        "cairo_type": "felt",
                        "offset": 7
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_le": {
                "decorators": [],
                "pc": 28,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 42,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "type": "const",
                "value": 5316911983139663648412552867652567041
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "type": "const",
                "value": 3544607988759775765608368578435044694
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 42,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 42,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "pc": 42,
                        "value": "[cast(fp + (-5), felt*)]"
                    },
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 8
                        },
                        "pc": 52,
                        "value": "cast([fp + (-5)] + 4, felt)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 66,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 78,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 87,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 87,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 8,
                            "offset": 0
                        },
                        "pc": 87,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn": {
                "decorators": [],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.assert_nn.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.assert_nn.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "pc": 24,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_nn_le": {
                "decorators": [],
                "pc": 33,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_nn_le.Args": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_nn_le.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_int": {
                "decorators": [],
                "pc": 113,
                "type": "function"
            },
            "starkware.cairo.common.math.split_int.Args": {
                "full_name": "starkware.cairo.common.math.split_int.Args",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "bound": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "output": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.split_int.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.split_int.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.split_int.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.split_int.base": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.base",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 113,
                        "value": "[cast(fp + (-5), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.bound": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.bound",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 113,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.output": {
                "cairo_type": "felt*",
                "full_name": "starkware.cairo.common.math.split_int.output",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 113,
                        "value": "[cast(fp + (-3), felt**)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.split_int.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.split_int.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 10,
                            "offset": 0
                        },
                        "pc": 113,
                        "value": "[cast(fp + (-7), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem": {
                "decorators": [],
                "pc": 98,
                "type": "function"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Args": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
                "members": {
                    "div": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.unsigned_div_rem.Return": {
                "cairo_type": "(q: felt, r: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math.unsigned_div_rem.div": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 98,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.q": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 98,
                        "value": "[cast([fp + (-5)] + 1, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.r": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 98,
                        "value": "[cast([fp + (-5)], felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math.unsigned_div_rem.value": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 9,
                            "offset": 0
                        },
                        "pc": 98,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "type": "const",
                "value": 340282366920938463463374607431768211456
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 138,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "b": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 138,
                        "value": "[cast(fp + (-4), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 12,
                            "offset": 0
                        },
                        "pc": 138,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 150,
                "type": "label"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "len": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "src": {
                        "cairo_type": "felt*",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 3
                        },
                        "pc": 10,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.len": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 0
                        },
                        "pc": 3,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 8,
                "type": "label"
            },
            "starkware.cairo.common.memset.memset": {
                "decorators": [],
                "pc": 158,
                "type": "function"
            },
            "starkware.cairo.common.memset.memset.Args": {
                "full_name": "starkware.cairo.common.memset.memset.Args",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    },
                    "n": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memset.memset.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memset.memset.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memset.memset.LoopFrame": {
                "full_name": "starkware.cairo.common.memset.memset.LoopFrame",
                "members": {
                    "dst": {
                        "cairo_type": "felt*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.memset.memset.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memset.memset.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.memset.memset.continue_loop": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memset.memset.continue_loop",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 1
                        },
                        "pc": 163,
                        "value": "[cast(ap, felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.memset.memset.loop": {
                "pc": 162,
                "type": "label"
            },
            "starkware.cairo.common.memset.memset.n": {
                "cairo_type": "felt",
                "full_name": "starkware.cairo.common.memset.memset.n",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 13,
                            "offset": 0
                        },
                        "pc": 158,
                        "value": "[cast(fp + (-3), felt*)]"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
                "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
                "members": {
                    "s0": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "s1": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "s2": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.pow.assert_le": {
                "destination": "starkware.cairo.common.math.assert_le",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_ap": {
                "destination": "starkware.cairo.common.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.pow.get_fp_and_pc": {
                "destination": "starkware.cairo.common.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.pow.pow": {
                "decorators": [],
                "pc": 169,
                "type": "function"
            },
            "starkware.cairo.common.pow.pow.Args": {
                "full_name": "starkware.cairo.common.pow.pow.Args",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "exp": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.pow.pow.ImplicitArgs": {
                "full_name": "starkware.cairo.common.pow.pow.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.pow.pow.LoopLocals": {
                "full_name": "starkware.cairo.common.pow.pow.LoopLocals",
                "members": {
                    "base": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "bit": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "exp": {
                        "cairo_type": "felt",
                        "offset": 4
                    },
                    "res": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "temp0": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.pow.pow.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.pow.pow.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.common.pow.pow.even": {
                "pc": 182,
                "type": "label"
            },
            "starkware.cairo.common.pow.pow.locs": {
                "cairo_type": "starkware.cairo.common.pow.pow.LoopLocals*",
                "full_name": "starkware.cairo.common.pow.pow.locs",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 3
                        },
                        "pc": 179,
                        "value": "cast(ap, starkware.cairo.common.pow.pow.LoopLocals*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.pow.pow.loop": {
                "pc": 179,
                "type": "label"
            },
            "starkware.cairo.common.pow.pow.odd": {
                "pc": 187,
                "type": "label"
            },
            "starkware.cairo.common.pow.pow.prev_locs": {
                "cairo_type": "starkware.cairo.common.pow.pow.LoopLocals*",
                "full_name": "starkware.cairo.common.pow.pow.prev_locs",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 14,
                            "offset": 3
                        },
                        "pc": 179,
                        "value": "cast(ap + (-5), starkware.cairo.common.pow.pow.LoopLocals*)"
                    }
                ],
                "type": "reference"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 19,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.Return": {
                "cairo_type": "(ap_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_ap.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "type": "const",
                "value": 0
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "type": "const",
                "value": -106710729501573572985208420194530329073740042555888586719489
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "type": "const",
                "value": 256
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "type": "const",
                "value": 20853273475220472486191784820
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "retdata_size": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "type": "const",
                "value": 21167594061783206823196716140
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 23274015802972845247556842986379118667122
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "type": "const",
                "value": 75202468540281
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
                        "offset": 6
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "constructor_calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "constructor_calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "contract_address_salt": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "deploy_from_zero": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "constructor_retdata": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "constructor_retdata_size": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "type": "const",
                "value": 1280709301550335749748
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "data": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "data_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "keys": {
                        "cairo_type": "felt*",
                        "offset": 2
                    },
                    "keys_len": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "type": "const",
                "value": 1448089106835523001438702345020786
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "type": "const",
                "value": 24294903732626645868215235778792757751152
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 94901967781393078444254803017658102643
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 6219495360805491471215297013070624192820083
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "type": "const",
                "value": 1592190833581991703053805829594610833820054387
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "type": "const",
                "value": 1317029390204112103023
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "type": "const",
                "value": 1448089128652340074717162277007973
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                        "offset": 1
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                        "offset": 1
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 1
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "type": "const",
                "value": 436233452754198157705746250789557519228244616562
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "type": "const",
                "value": 92376026794327011772951660
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
                        "offset": 5
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "calldata": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "calldata_size": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "function_selector": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
                "type": "const",
                "value": 25500403217443378527601783667
            },
            "starkware.starknet.common.syscalls.ReplaceClass": {
                "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
                "members": {
                    "class_hash": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "type": "const",
                "value": 433017908768303439907196859243777073
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "type": "const",
                "value": 100890693370601760042082660
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "type": "const",
                "value": 25828017502874050592466629733
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "payload_ptr": {
                        "cairo_type": "felt*",
                        "offset": 3
                    },
                    "payload_size": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "to_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
                        "offset": 0
                    },
                    "response": {
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "selector": {
                        "cairo_type": "felt",
                        "offset": 0
                    },
                    "value": {
                        "cairo_type": "felt",
                        "offset": 2
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "account_contract_address": {
                        "cairo_type": "felt",
                        "offset": 1
                    },
                    "chain_id": {
                        "cairo_type": "felt",
                        "offset": 6
                    },
                    "max_fee": {
                        "cairo_type": "felt",
                        "offset": 2
                    },
                    "nonce": {
                        "cairo_type": "felt",
                        "offset": 7
                    },
                    "signature": {
                        "cairo_type": "felt*",
                        "offset": 4
                    },
                    "signature_len": {
                        "cairo_type": "felt",
                        "offset": 3
                    },
                    "transaction_hash": {
                        "cairo_type": "felt",
                        "offset": 5
                    },
                    "version": {
                        "cairo_type": "felt",
                        "offset": 0
                    }
                },
                "size": 8,
                "type": "struct"
            }
        },
        "main_scope": "__main__",
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "pc": 3,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 3
                    },
                    "pc": 10,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 42,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 42,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 42,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 87,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 87,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 98,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 98,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 98,
                    "value": "[cast([fp + (-5)], felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 98,
                    "value": "[cast([fp + (-5)] + 1, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 113,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 113,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 113,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 113,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 138,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 138,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 158,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 1
                    },
                    "pc": 163,
                    "value": "[cast(ap, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 3
                    },
                    "pc": 179,
                    "value": "cast(ap + (-5), starkware.cairo.common.pow.pow.LoopLocals*)"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 3
                    },
                    "pc": 179,
                    "value": "cast(ap, starkware.cairo.common.pow.pow.LoopLocals*)"
                },
                {
                    "ap_tracking_data": {
                        "group": 20,
                        "offset": 0
                    },
                    "pc": 697,
                    "value": "[cast(fp + (-5), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 20,
                        "offset": 0
                    },
                    "pc": 697,
                    "value": "[cast(fp + (-4), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 20,
                        "offset": 0
                    },
                    "pc": 697,
                    "value": "[cast(fp + (-3), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 0
                    },
                    "pc": 860,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 2
                    },
                    "pc": 862,
                    "value": "[cast(fp, felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 40,
                        "offset": 0
                    },
                    "pc": 1188,
                    "value": "[cast(fp + (-3), felt**)]"
                }
            ]
        }
    }
}
