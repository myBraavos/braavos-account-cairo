%lang starknet

//
// Interface Ids
//

// ERC165
const IERC165_ID = 0x01ffc9a7;
const INVALID_ID = 0xffffffff;

// Account
const ACCOUNT_IMPL_VERSION = '000.000.012';
const IACCOUNT_ID = 0xa66bd575;
const IACCOUNT_ID_v0x1010102 = 0xf10dbd44;

// Selector computed using Python's starkware.starknet.compiler.compile.get_selector_from_name
const SUPPORTS_INTERFACE_SELECTOR = 1184015894760294494673613438913361435336722154500302038630992932234692784845;
const REMOVE_SIGNER_SELECTOR = 409261550851542507680168322314239740979393570425390024668899463010292902806;
const REMOVE_SIGNER_WITH_ETD_SELECTOR = 1189488687767662123356698053193137082046618410956870915062359977563328943793;
const MIGRATE_STORAGE_SELECTOR = 522038773094464137401434129447374078914611256157886368771002985264489953033;
const INITIALIZER_SELECTOR = 1295919550572838631247819983596733806859788957403169325509326258146877103642;
const SET_MULTISIG_SELECTOR = 979263662673215070237784411221295853154410968114948506634943934754177391346;
const ADD_SIGNER_SELECTOR = 163160470112599928456934797768840367968245733614578848060926957836914140077;
const SIGN_PENDING_MULTISIG_TXN_SELECTOR = 739140450142317551736190475027448397206197387125691924280419642098391765544;
const DISABLE_MULTISIG_SELECTOR = 1758259583752551939040810879209073852335166648624686940608467553891753933031;
const DISABLE_MULTISIG_WITH_ETD_SELECTOR = 174813914610141181835653391265740007128686786058622343737933013940855989184;
const CANCEL_DEFERRED_DISABLE_MULTISIG_REQ_SELECTOR = 2368085011737712558832061853528991504353100933681333270721786327191901518;
const CANCEL_DEFERRED_REMOVE_SIGNER_REQ_SELECTOR = 269717755689401876173711085406697014939272590112879486617649727631382791657;
const IS_VALID_SIGNATURE_SELECTOR = 1138073982574099226972715907883430523600275391887289231447128254784345409857;
const GET_PUBLIC_KEY_SELECTOR = 740926757903304703334766688525052991028117105695935472386075434843853795643;
const REMOVE_EXTERNAL_ACCOUNT_SIGNER_SELECTOR = 1088418780668327445641454526102526722041478154121994161295232574416286360055;
const ASSERT_EXPECTED_MAX_FEE_SELECTOR = 289396536228526589064869386381959268926453362256768604757727873519189413495;
const SIGNER_TYPE_UNUSED = 0x0;
const SIGNER_TYPE_STARK = 0x1;
const SIGNER_TYPE_SECP256R1 = 0x2;
const SIGNER_TYPE_SWS_DEPRECATED = 0x3;  // was used on goerli to test software signer, never reached mainnet
const SIGNER_TYPE_EXTERNAL_ACCOUNT = 0x4;
const ACCOUNT_DEFAULT_EXECUTION_TIME_DELAY_SEC = 345600;
const ACCOUNT_MOA_DAILY_TXN_LIMIT = 24;
const MULTISIG_MOA_MAX_VALIDATE_FEE_FOR_PRE_EXEC_SIGNER = 9000 * 250 * 10**9;  // 9000 gas * 250 GWEI
const MULTISIG_PENDING_TXN_EXPIRY_SEC = 300;
const MULTISIG_PENDING_TXN_MOA_EXPIRY_SEC = 14 * 24 * 60 * 60;
// After 0.12.0 upgrade, need to remove block expiry logic and rely only on timestamp
const MULTISIG_PENDING_TXN_EXPIRY_BLOCK_NUM = 3;
const MULTISIG_PENDING_TXN_MOA_EXPIRY_BLOCK_NUM = 14 * 24 * 60; // assuming block every ~1 min
const STARK_PLUS_SECP256R1_SIG_LEN = 8;
const NATIVE_STARK_SIG_LEN = 2;
const STARK_SIG_LEN = 3;
const SECP256R1_UINT256_SIG_LEN = 5;
const TX_VERSION_0 = 0;
const TX_VERSION_0_EST_FEE = 340282366920938463463374607431768211456;
const TX_VERSION_1 = 1;
const TX_VERSION_1_EST_FEE = 340282366920938463463374607431768211457;

